function sleep(e){if(!(0<e&&e<1/0)||"number"!=typeof e&&"bigint"!=typeof e)throw new Error("Provide valid time milliseconds and has to be type Number or BigInt");e=Number(e);for(var t=performance||Date,i=t.now();t.now()!==i+e;);return!0}function sleepAsync(i){return new Promise((e,t)=>{0<i&&i<1/0&&("number"==typeof i||"bigint"==typeof i)||t("Provide valid time milliseconds and has to be type Number or BigInt"),i=Number(i),setTimeout(()=>e(!0),i)})}function wait(e){if(0<e&&e<1/0)return Atomics.wait(new Int32Array(new SharedArrayBuffer(4)),0,0,e),!0;throw new Error("Provide valid time milliseconds and has to be type Number or BigInt")}function timeout(e){return("undefined"!=typeof SharedArrayBuffer&&"undefined"!=typeof Atomics?wait:sleep)(e)}module.exports={wait:wait,sleep:sleep,timeout:timeout},module.exports.default={wait:wait,sleep:sleep,timeout:timeout};